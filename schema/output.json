{
  "$ref": "#/definitions/ModelOutput",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "CommonModelInput": {
      "additionalProperties": false,
      "description": "A generalized description of the input to an epidemiological model.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ModelParameters",
          "description": "Desired parameters.\nConnectors may choose to ignore any of these parameters if they wish."
        },
        "region": {
          "$ref": "#/definitions/Region",
          "description": "The desired geographical top-level region for the simulation.\nConnector must check this value (and subregion, if provided) and and either produce results for that geography, or return an error."
        },
        "subregion": {
          "$ref": "#/definitions/Subregion",
          "description": "Specific subregion for the simulation.\nMay be omitted"
        }
      },
      "required": [
        "region",
        "parameters"
      ],
      "title": "Common Model Input",
      "type": "object"
    },
    "CommonModelOutput": {
      "additionalProperties": false,
      "properties": {
        "aggregate": {
          "additionalProperties": false,
          "properties": {
            "metrics": {
              "$ref": "#/definitions/SeverityMetrics"
            }
          },
          "required": [
            "metrics"
          ],
          "type": "object"
        },
        "metadata": {
          "$ref": "#/definitions/CommonModelInput"
        },
        "model": {
          "$ref": "#/definitions/ModelDescription"
        },
        "time": {
          "additionalProperties": false,
          "properties": {
            "extent": {
              "description": "The minimum and maximum timestamps for the series of reported metrics.\nEach value is a number of days after `t0`.",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            },
            "t0": {
              "description": "An ISO-8601 string encoding the date that each timeseries begins.",
              "type": "string"
            },
            "timestamps": {
              "description": "The timestamps that correspond to every series of metrics.\nEach value is a number of days after `t0`.",
              "items": {
                "type": "number"
              },
              "type": "array"
            }
          },
          "required": [
            "t0",
            "timestamps",
            "extent"
          ],
          "type": "object"
        }
      },
      "required": [
        "metadata",
        "model",
        "time",
        "aggregate"
      ],
      "title": "Common Model Output",
      "type": "object"
    },
    "ISODate": {
      "examples": [
        "2020-03-06"
      ],
      "title": "ISO Date",
      "type": "string"
    },
    "Intensity": {
      "enum": [
        "aggressive",
        "moderate",
        "mild"
      ],
      "title": "Intensity",
      "type": "string"
    },
    "InterventionPeriod": {
      "additionalProperties": false,
      "description": "Each intervention period is specified by a `startDate`, a set of interventions (`socialDistancing`, `caseIsolation`, `voluntaryHomeQuarantine`, and `schoolClosure`), and an estimate of the overall effect of these interventions (`reductionPopulationContact`).\nThis overall estimate is needed because some models do not simulate the effects of individual interventions.\nThe strictness of each intervention is specified roughly, as one of `mild`, `moderate`, or `aggressive`.\nEach model connector is responsible for interpreting this distinction in a way that works for the particular model.",
      "properties": {
        "caseIsolation": {
          "$ref": "#/definitions/Intensity",
          "description": "The level to which individuals with symptoms self-isolate."
        },
        "reductionPopulationContact": {
          "description": "The estimated reduction in population contact resulting from all of the above interventions.\nSome models require this generalized parameter instead of the individual interventions.",
          "type": "number"
        },
        "schoolClosure": {
          "$ref": "#/definitions/Intensity",
          "description": "The level of school closure in the region."
        },
        "socialDistancing": {
          "$ref": "#/definitions/Intensity",
          "description": "The level of social distancing in the region."
        },
        "startDate": {
          "$ref": "#/definitions/ISODate",
          "description": "An ISO-8601 string encoding the date that these interventions begin."
        },
        "voluntaryHomeQuarantine": {
          "$ref": "#/definitions/Intensity",
          "description": "The level to which entire households self-isolate when one member of the household has symptoms."
        }
      },
      "required": [
        "startDate",
        "reductionPopulationContact"
      ],
      "title": "Intervention Period",
      "type": "object"
    },
    "MicroMoBBHRMInput": {
      "additionalProperties": false,
      "properties": {
        "adult_M": {
          "description": "total mosquito density per patch (length should equal number of patches)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_Y": {
          "description": "infected mosquito density per patch (length should equal number of patches)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_Z": {
          "description": "infectious mosquito density per patch (length should equal number of patches)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_eip": {
          "description": "the extrinsic incubation period (can be either length 1, 365, or equal to\ntmax)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_f": {
          "description": "Blood feeding rate",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_nu": {
          "description": "number of eggs laid per oviposition",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_p": {
          "description": "Adult daily survival probability\n(rows correspond to patches and columns to days)",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        },
        "adult_psi": {
          "description": "mosquito dispersal matrix (rows must sum to 1)",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        },
        "adult_q": {
          "description": "Human blood feeding fraction",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "adult_stochastic": {
          "description": "Update the adult mosquito model stochastically or deterministically?",
          "items": {
            "type": "boolean"
          },
          "type": "array"
        },
        "aqua_K": {
          "description": "Carrying capacity\n(rows correspond to patches and columns to days)",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        },
        "aqua_L": {
          "description": "Initial number of immature mosquitoes (length should equal number of\npatches)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "aqua_molt": {
          "description": "Proportion of immature stages which mature and emerge as adults each day\n(rows correspond to patches and columns to days)",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        },
        "aqua_stochastic": {
          "description": "Update the aquatic mosquito model stochastically or deterministically?",
          "items": {
            "type": "boolean"
          },
          "type": "array"
        },
        "aqua_surv": {
          "description": "Aquatic daily survival probability\n(rows correspond to patches and columns to days)",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        },
        "p": {
          "description": "Number of patches",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "tmax": {
          "description": "Number of time steps",
          "items": {
            "type": "number"
          },
          "type": "array"
        }
      },
      "required": [
        "p",
        "tmax",
        "aqua_stochastic",
        "aqua_molt",
        "aqua_surv",
        "aqua_K",
        "aqua_L",
        "adult_stochastic",
        "adult_f",
        "adult_q",
        "adult_eip",
        "adult_p",
        "adult_psi",
        "adult_nu",
        "adult_M",
        "adult_Y",
        "adult_Z"
      ],
      "title": "Input for MicroMoB model with Beverton-Holt aquatic mosquito model and\nRoss-Macdonald adult mosquito model.",
      "type": "object"
    },
    "MicroMoBBHRMOutput": {
      "additionalProperties": false,
      "properties": {
        "MYZ": {
          "description": "Array (patches, days, MYZ)",
          "items": {
            "items": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "array"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/MicroMoBBHRMInput"
        },
        "t": {
          "description": "Vector of times at which the model is run",
          "items": {
            "type": "number"
          },
          "type": "array"
        }
      },
      "required": [
        "metadata",
        "t",
        "MYZ"
      ],
      "title": "Minimal Model Output",
      "type": "object"
    },
    "MinimalModelInput": {
      "additionalProperties": false,
      "properties": {
        "dt": {
          "description": "Optional time interval at which to compute the states.",
          "type": "number"
        },
        "p": {
          "description": "Vector of model parameters",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "tspan": {
          "description": "Timespan over which to simulate the model",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "u0": {
          "description": "Vector of initial conditions",
          "items": {
            "type": "number"
          },
          "type": "array"
        }
      },
      "required": [
        "p",
        "u0",
        "tspan"
      ],
      "title": "Minimal Model Input",
      "type": "object"
    },
    "MinimalModelOutput": {
      "additionalProperties": false,
      "properties": {
        "metadata": {
          "$ref": "#/definitions/MinimalModelInput"
        },
        "model": {
          "$ref": "#/definitions/ModelDescription"
        },
        "outputs": {
          "description": "Optional vector of outputs",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "t": {
          "description": "Vector of times at which the model is run",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "u": {
          "description": "Matrix of states",
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        }
      },
      "required": [
        "metadata",
        "model",
        "t",
        "u"
      ],
      "title": "Minimal Model Output",
      "type": "object"
    },
    "ModelDescription": {
      "additionalProperties": false,
      "properties": {
        "connectorVersion": {
          "description": "A version number identifying the version of the connector used in this run.\nThis may be the same as modelVersion if development of the two is closely-linked.",
          "type": "string"
        },
        "modelVersion": {
          "description": "A version number identifying the version of the model used in this run.",
          "type": "string"
        },
        "name": {
          "description": "A short display name to identify the model",
          "type": "string"
        }
      },
      "required": [
        "name",
        "modelVersion",
        "connectorVersion"
      ],
      "title": "Model Description",
      "type": "object"
    },
    "ModelOutput": {
      "anyOf": [
        {
          "$ref": "#/definitions/CommonModelOutput"
        },
        {
          "$ref": "#/definitions/MinimalModelOutput"
        },
        {
          "$ref": "#/definitions/MicroMoBBHRMOutput"
        }
      ],
      "title": "Model Output"
    },
    "ModelParameters": {
      "additionalProperties": false,
      "properties": {
        "calibrationCaseCount": {
          "description": "The total number of confirmed cases in the region before the calibration date.",
          "type": "number"
        },
        "calibrationDate": {
          "$ref": "#/definitions/ISODate",
          "description": "An ISO-8601 string encoding the date of the most recent case data in the region.\nSome models such as `CovidSim` require you to provide some information about recorded cases in the region, in order to calibrate the model.\nThe web-interface provides this information automatically, based on recorded case data downloaded daily from various international data sources."
        },
        "calibrationDeathCount": {
          "description": "The total number of deaths in the region before the calibration date.",
          "type": "number"
        },
        "interventionPeriods": {
          "description": "A list of time periods, each with a different set of interventions.\nPolicy interventions are specified as a series of _intervention periods_, each with a certain set of interventions that are in place.\nFor example, case isolation and social distancing may be instituted first, followed by school closure a week later, followed by a relaxation of all guidelines after several months.\n**Note** - In order to specify that _all_ interventions end on a certain date, there should be a _final_ intervention period that starts on that date, has no interventions specified, and has `reductionPopulationContact` set to zero.",
          "items": {
            "$ref": "#/definitions/InterventionPeriod"
          },
          "type": "array"
        },
        "r0": {
          "description": "The assumed [_reproduction number_](https://en.wikipedia.org/wiki/Basic_reproduction_number) for the virus.\nIf this is null, then each model will use its own default value.",
          "type": [
            "number",
            "null"
          ]
        }
      },
      "required": [
        "calibrationDate",
        "calibrationCaseCount",
        "calibrationDeathCount",
        "r0",
        "interventionPeriods"
      ],
      "title": "Model Parameters",
      "type": "object"
    },
    "Region": {
      "examples": [
        "US"
      ],
      "title": "Region",
      "type": "string"
    },
    "SeverityMetrics": {
      "additionalProperties": false,
      "description": "The output contains a number of time series which represent predicted metrics about the epidemic.\nThree kinds of metrics are reported:\n- **Current values** - These metrics (e.g. `Mild`, `Critical`) represent the current number of patients in a given condition, on a particular date. For example, the `Critical` value at a given timestamp represents the number of patients in critical condition on that day.\n- **Cumulative values** - These metrics (e.g. `cumMild`, `cumCritical`) represent the total number of people who have been afflicted with a given condition since the beginning of the epidemic. For example, the `cumCritical` value at a given timestamp represents the total number of people who had been in critical condition due to the virus any time leading up to that day.\n- **Incidence values** - The `incDeath` metric represents the number of patients who died of the virus on a given day.\nEach output is an array corresponding to the `extent` specified above (i.e. with the same length as `timestamps`).\nOther than for `R` all numbers must be integers.\nNot all output parameters may be appropriate for your model.\nAll keys (except `R`) in the `aggregate` object are required however.\nIf a particular metric is not supported an array of zeros can be given.\nFor `R`, if your model does not produce this, you can simply omit the key.",
      "properties": {
        "CritRecov": {
          "description": "Current number of critical cases on this day who are well enough to leave the ICU but still need a hospital bed",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "Critical": {
          "description": "Current number of critical cases on this day (assume represents ICU demand)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "ILI": {
          "description": "Current number of influenza-like illness cases on this day (assume represents GP demand)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "Mild": {
          "description": "Current number of mild cases on this day",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "R": {
          "description": "R-number on this day",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "SARI": {
          "description": "Current number of Severe Acute Respiratory Illness cases on this day (assume represents hospital demand)",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "cumCritRecov": {
          "description": "Total number of patients recovered from critical cases since the beginning of the epidemic",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "cumCritical": {
          "description": "Total number of critical cases since the beginning of the epidemic",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "cumILI": {
          "description": "Total number of influenza-like illnesses since the beginning of the epidemic",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "cumMild": {
          "description": "Total number of mild cases since the beginning of the epidemic",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "cumSARI": {
          "description": "Total number of severe acute respiratory illnesses since the beginning of the epidemic",
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        "incDeath": {
          "description": "Number of deaths occurring on this day",
          "items": {
            "type": "number"
          },
          "type": "array"
        }
      },
      "required": [
        "Mild",
        "ILI",
        "SARI",
        "Critical",
        "CritRecov",
        "incDeath",
        "cumMild",
        "cumILI",
        "cumSARI",
        "cumCritical",
        "cumCritRecov"
      ],
      "title": "Severity Metrics",
      "type": "object"
    },
    "Subregion": {
      "examples": [
        "US-AK"
      ],
      "title": "Subregion",
      "type": "string"
    }
  }
}